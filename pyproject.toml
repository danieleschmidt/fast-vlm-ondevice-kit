[build-system]
requires = ["setuptools>=45", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "fast-vlm-ondevice"
version = "1.0.0"
description = "Production-ready Vision-Language Models for mobile devices"
authors = [{name = "Daniel Schmidt", email = "fast-vlm@yourdomain.com"}]
license = {file = "LICENSE"}
readme = "README.md"
requires-python = ">=3.10"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
dependencies = [
    "torch>=2.3.0",
    "torchvision>=0.18.0", 
    "coremltools>=7.1",
    "transformers>=4.40.0",
    "pillow>=10.0.0",
    "numpy>=1.24.0",
]

[project.optional-dependencies]
dev = [
    # Testing framework
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-xdist>=3.3.1",
    "pytest-benchmark>=4.0.0",
    "pytest-mock>=3.11.1",
    
    # Code quality
    "black>=23.7.0",
    "isort>=5.12.0",
    "mypy>=1.5.0",
    "ruff>=0.1.0",
    "flake8>=6.0.0",
    "bandit>=1.7.5",
    
    # Development tools
    "pre-commit>=3.3.0",
    "ipython>=8.14.0",
    "jupyter>=1.0.0",
    "ipywidgets>=8.0.0",
    
    # Documentation
    "sphinx>=7.1.0",
    "sphinx-rtd-theme>=1.3.0",
    "sphinx-autodoc-typehints>=1.24.0",
    "myst-parser>=2.0.0",
    
    # Performance monitoring
    "memory-profiler>=0.61.0",
    "psutil>=5.9.0",
    "py-spy>=0.3.14",
]

# Production extras for deployment
production = [
    "gunicorn>=21.2.0",
    "prometheus-client>=0.17.1",
    "structlog>=23.1.0",
]

# Benchmarking extras
benchmark = [
    "matplotlib>=3.7.0",
    "seaborn>=0.12.0",
    "pandas>=2.0.0",
    "plotly>=5.15.0",
]

# All extras combined
all = [
    "fast-vlm-ondevice[dev,production,benchmark]",
]

[project.scripts]
fastvilm-convert = "fast_vlm_ondevice.cli:convert_model"
fastvilm-benchmark = "fast_vlm_ondevice.cli:run_benchmark"
fastvilm-validate = "fast_vlm_ondevice.cli:validate_model"

[project.urls]
Homepage = "https://github.com/yourusername/fast-vlm-ondevice-kit"
Repository = "https://github.com/yourusername/fast-vlm-ondevice-kit.git"
Documentation = "https://fast-vlm-ondevice.readthedocs.io"
Issues = "https://github.com/yourusername/fast-vlm-ondevice-kit/issues"
Changelog = "https://github.com/yourusername/fast-vlm-ondevice-kit/blob/main/CHANGELOG.md"
Funding = "https://github.com/sponsors/yourusername"

[tool.setuptools.packages.find]
where = ["src"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "--cov=src/fast_vlm_ondevice --cov-report=term-missing"

[tool.black]
line-length = 88
target-version = ['py310']

[tool.isort]
profile = "black"
src_paths = ["src", "tests"]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
check_untyped_defs = true
disallow_any_generics = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
exclude = [
    "build/",
    "dist/",
    ".venv/",
    "venv/",
]

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/.venv/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.ruff]
target-version = "py310"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"tests/**/*" = ["B011", "B015", "B018"]

[tool.bandit]
exclude_dirs = ["tests", "build", "dist", ".venv", "venv"]
skips = ["B101", "B601"]

[tool.semantic_release]
version_toml = "pyproject.toml:project.version"
branch = "main"
upload_to_pypi = false
upload_to_release = true
build_command = "pip install build && python -m build"